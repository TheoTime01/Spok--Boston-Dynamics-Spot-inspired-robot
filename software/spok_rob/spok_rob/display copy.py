import csv
import ast  # For safely evaluating string literals
import matplotlib.pyplot as plt

def plot_joint_positions_and_pulses(csv_file):
    # Initialize data structures to store joint positions and pulse positions
    indices = []
    joint_positions = {}
    joint_pulses = {}

    # Read data from the CSV file
    with open(csv_file, mode='r') as file:
        reader = csv.DictReader(file)
        for row in reader:
            # Get the index and joint positions
            i = int(row['i'])
            indices.append(i)
            
            # Parse the joint names, positions, and pulse positions
            joint_names = ast.literal_eval(row['joint_names'])  # Safely parse the list
            positions = ast.literal_eval(row['positions'])     # Safely parse the list
            pulses = ast.literal_eval(row['pulse_position'])   # Safely parse the list
            
            # Populate joint_positions and joint_pulses dictionaries
            for joint, position, pulse in zip(joint_names, positions, pulses):
                if joint not in joint_positions:
                    joint_positions[joint] = []
                if joint not in joint_pulses:
                    joint_pulses[joint] = []
                joint_positions[joint].append(position)
                joint_pulses[joint].append(pulse)

    # Plot positions for each joint
    plt.figure(figsize=(10, 6))
    for joint, positions in joint_positions.items():
        if 'shoulder' in joint:  # Shoulders get * markers
            plt.plot(indices, positions, label=joint, marker='*', linestyle='-')
        elif 'foot' in joint:  # Feet get dashed lines
            plt.plot(indices, positions, label=joint, linestyle='--')
        else:  # Default style for other joints
            plt.plot(indices, positions, label=joint, linestyle='-')

    # Customize the positions plot
    plt.title('Turn: Joint Positions')
    plt.xlabel('Index (i)')
    plt.ylabel('Position')
    plt.legend()
    plt.grid(True)
    plt.tight_layout()

    # Show the positions plot
    plt.show()

    # Plot pulse positions for each joint
    plt.figure(figsize=(10, 6))
    for joint, pulses in joint_pulses.items():
        if 'shoulder' in joint:  # Shoulders get * markers
            plt.plot(indices, pulses, label=joint, marker='*', linestyle='-')
        elif 'foot' in joint:  # Feet get dashed lines
            plt.plot(indices, pulses, label=joint, linestyle='--')
        else:  # Default style for other joints
            plt.plot(indices, pulses, label=joint, linestyle='-')

    # Customize the pulse positions plot
    plt.title('Turn: Joint Pulse Positions')
    plt.xlabel('Index (i)')
    plt.ylabel('Pulse Position')
    plt.legend()
    plt.grid(True)
    plt.tight_layout()

    # Show the pulse positions plot
    plt.show()

if __name__ == '__main__':
    # Path to the CSV file generated by the ROS2 subscriber
    csv_file = '/home/tototime/ros2_spok_ws/src/S7_G7_Perrichet_Sibenaler/software/spok_rob/spok_rob/joint_trajectory_turn_around_data_modified.csv'

    try:
        plot_joint_positions_and_pulses(csv_file)
    except FileNotFoundError:
        print(f"Error: The file '{csv_file}' does not exist. Make sure the file is in the correct directory.")
